% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tk-widgets.R
\name{tic_button}
\alias{tic_button}
\title{Button that runs a command when pressed}
\usage{
tic_button(
  text,
  command,
  textvariable,
  image,
  compound,
  width,
  bind = NULL,
  pack = NULL,
  ...
)
}
\arguments{
\item{text, textvariable}{Specifies a text string to be displayed inside the widget.
\describe{
  \item{\code{text}}{Simple character string containing the name}
  \item{\code{textvariable}}{Reactive variable containing a string}
}}

\item{command}{Function to evaluate when the widget is invoked.}

\item{image}{pathname of image to display}

\item{compound}{Specifies how to display the image relative to the text, 
      in the case both \code{text} and \code{image} are present.
      Possible values: 
\describe{
  \item{\code{text}}{Display text only}
  \item{\code{image}}{Display image only}
  \item{\code{top,bottom,left,right,center}}{Display image with this position relative
              to the text}
  \item{\code{none}}{Display the image if present, otherwise the text}
}}

\item{width}{If greater than zero, specifies how much space, in character 
widths, to allocate for the text label. If less than zero, specifies 
a minimum width. If zero or unspecified, the natural width of the 
text label is used.}

\item{bind}{bind commands to particular events on this element. This may be 
a single result of \code{bind_opts()} or a list of them for multiple
events.}

\item{pack}{a named list of pack options for how to incorporate this element into its 
parent container.  Default: NULL means to use the standard packing.
See \code{pack_opts()} as a way of creating a valid list of pack options.}

\item{...}{Other arguments are parsed as follows:
 \describe{
   \item{\code{named arguments}}{Further options to be used during the creation 
         of this widget.  See the tcl/tk documentation for all arguments possible
         for this widget.}
   \item{\code{unnamed arguments}}{Container widgets (e.g. \code{tic_frame()}) treat any 
         unnamed arguments as child objects.   Non-container widgets 
         (e.g \code{tic_button()}) will
         raise an error if there are any unnamed widgets.}
}}
}
\value{
A \code{tic_spec} object containing the widget specification.
}
\description{
A button widget displays a textual label and/or image, and evaluates a 
command when pressed.
}
\section{tcl/tk}{


See tcl/tk documentation for more information on this element 
\url{https://www.tcl.tk/man/tcl8.6/TkCmd/ttk_button.htm}
}

\examples{
\dontrun{
  tic_window(
    title = "Hello",
    tic_button(text = "Button", command = function() { message("Button clicked") })
  )
}



}
\seealso{
Other widgets: 
\code{\link{tic_canvas}()},
\code{\link{tic_checkbutton}()},
\code{\link{tic_combobox}()},
\code{\link{tic_label}()},
\code{\link{tic_menubutton}()},
\code{\link{tic_menuitem}()},
\code{\link{tic_menu}()},
\code{\link{tic_progressbar}()},
\code{\link{tic_radiobutton}()},
\code{\link{tic_separator}()},
\code{\link{tic_sizegrip}()},
\code{\link{tic_slider}()},
\code{\link{tic_spinbox}()},
\code{\link{tic_submenu}()},
\code{\link{tic_textbox}()},
\code{\link{tic_textentry}()}
}
\concept{widgets}
