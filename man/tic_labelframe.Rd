% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tk-containers.R
\name{tic_labelframe}
\alias{tic_labelframe}
\alias{tic_frame}
\title{Container widgets with/without label label}
\usage{
tic_labelframe(
  ...,
  text,
  relief,
  borderwidth,
  bind = NULL,
  pack = NULL,
  pack_def = NULL
)

tic_frame(..., relief, borderwidth, bind = NULL, pack = NULL)
}
\arguments{
\item{...}{Other arguments are parsed as follows:
 \describe{
   \item{\code{named arguments}}{Further options to be used during the creation 
         of this widget.  See the tcl/tk documentation for all arguments possible
         for this widget.}
   \item{\code{unnamed arguments}}{Container widgets (e.g. \code{tic_frame()}) treat any 
         unnamed arguments as child objects.   Non-container widgets 
         (e.g \code{tic_button()}) will
         raise an error if there are any unnamed widgets.}
}}

\item{text}{Label to display for this frame. Character string.}

\item{relief}{border style. One of: flat, groove, raised, ridge, solid
sunken.  Defaults to: 'flat'}

\item{borderwidth}{desired width of widget border}

\item{bind}{bind commands to particular events on this element. This may be 
a single result of \code{bind_opts()} or a list of them for multiple
events.}

\item{pack}{a named list of pack options for how to incorporate this element into its 
parent container.  Default: NULL means to use the standard packing.
See \code{pack_opts()} as a way of creating a valid list of pack options.}

\item{pack_def}{Default packing options for children of this object. This
can be overriden by setting \code{pack} explicitly on child elemnets
you want to control packing for.}
}
\value{
handle on the tcl/tk object
}
\description{
A labelframe widget is a container used to group other widgets together.
}
\details{
It has a label.
}
\section{tcl/tk}{


See tcl/tk documentation for more information on this element 
\url{https://www.tcl.tk/man/tcl8.6/TkCmd/ttk_labelframe.htm}
}

\seealso{
Other widgets containers: 
\code{\link{tic_window}()}

Other widgets containers: 
\code{\link{tic_window}()}
}
\concept{widgets containers}
