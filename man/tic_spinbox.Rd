% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tk-widgets.R
\name{tic_spinbox}
\alias{tic_spinbox}
\title{Spinbox: Selecting text field widget}
\usage{
tic_spinbox(
  values,
  textvariable,
  command,
  from,
  to,
  increment,
  width,
  bind = NULL,
  pack = NULL,
  ...
)
}
\arguments{
\item{values}{Specifies the list of values to display in the spinbox.}

\item{textvariable}{Reactive value for the value displayed in this widget}

\item{command}{Function to evaluate when the widget is invoked.}

\item{from, to, increment}{numeric values for the low value, high value and
change in value when the up and down buttons are pressed.}

\item{width}{If greater than zero, specifies how much space, in character 
widths, to allocate for the text label. If less than zero, specifies 
a minimum width. If zero or unspecified, the natural width of the 
text label is used.}

\item{bind}{bind commands to particular events on this element. This may be 
a single result of \code{bind_opts()} or a list of them for multiple
events.}

\item{pack}{a named list of pack options for how to incorporate this element into its 
parent container.  Default: NULL means to use the standard packing.
See \code{pack_opts()} as a way of creating a valid list of pack options.}

\item{...}{Other arguments are parsed as follows:
 \describe{
   \item{\code{named arguments}}{Further options to be used during the creation 
         of this widget.  See the tcl/tk documentation for all arguments possible
         for this widget.}
   \item{\code{unnamed arguments}}{Container widgets (e.g. \code{tic_frame()}) treat any 
         unnamed arguments as child objects.   Non-container widgets 
         (e.g \code{tic_button()}) will
         raise an error if there are any unnamed widgets.}
}}
}
\value{
handle on the tcl/tk object
}
\description{
A spinbox widget is a text-entry widget with built-in up and down buttons 
that are used to either
\itemize{
   \item{modify a numeric value by setting \code{from, to, increment} arguments}
   \item{select among a set of values by using the \code{values} argument}
}
}
\details{
The widget implements all the features of the \code{tic_entry()} widget.
}
\section{tcl/tk}{


See tcl/tk documentation for more information on this element 
\url{https://www.tcl.tk/man/tcl8.6/TkCmd/ttk_spinbox.htm}
}

\examples{
opts <- c('alpha', 'bravo', 'charlie')
selected <- reactive_chr(opts[1])
tic_window(
  title = "Demo",
  tic_spinbox(values = opts, textvariable = selected)
)


}
\seealso{
Other widgets: 
\code{\link{tic_button}()},
\code{\link{tic_canvas}()},
\code{\link{tic_checkbutton}()},
\code{\link{tic_combobox}()},
\code{\link{tic_label}()},
\code{\link{tic_menubutton}()},
\code{\link{tic_menuitem}()},
\code{\link{tic_menu}()},
\code{\link{tic_progressbar}()},
\code{\link{tic_radiobutton}()},
\code{\link{tic_separator}()},
\code{\link{tic_sizegrip}()},
\code{\link{tic_slider}()},
\code{\link{tic_submenu}()},
\code{\link{tic_textbox}()},
\code{\link{tic_textentry}()}
}
\concept{widgets}
