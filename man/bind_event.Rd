% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bind-event.R
\name{bind_event}
\alias{bind_event}
\alias{bind_opts}
\title{Bind a command to a particular event}
\usage{
bind_event(tag, event, command)

bind_opts(event, command)
}
\arguments{
\item{tag}{the \code{tic_ui} object}

\item{event}{the event to watch for on this object.

The general form of an event is "modifiers-type-detail"}

\item{command}{R function to run when this even occurs.}
}
\description{
The bind command associates R functions with UI events.
}
\details{
\code{bind_opts} is used to define binding events within the UI spec.

After the UI is created (with a call to \code{win = render_ui(ui_spec)}),
events can be bound with \code{bind_event(...)}.
}
\section{examples}{


  \describe{
    \item{\code{"c"}}{keyboard character 'c'}
    \item{\code{"Control-q"}}{Key combination CTRL+q}
    \item{\code{"ButtonPress"}}{Any button press}
    \item{\code{"KeyPress"}}{Any keypress}
    \item{\code{"Double-Button-1"}}{Double click on Mouse Button number 1}
  }
}

\section{modifiers}{


Control, Alt, Shift, Lock, Button1-Button5, Mod1-Mod5, Meta
           Double, Triple, Quadruple
}

\section{events}{
           

Activate, ButtonPress, Button, ButtonRelease, Circulate, CirculateRequest,
Configure, ConfigureRequest, Create, Deactivate, Destroy, Enter, Expose, 
FocusIn, FocusOut, Gravity, KeyPress, Key, KeyRelease, Leave, Map, 
MapRequest, Motion, MouseWheel, Property, Reparent, ResizeRequest, 
Unmap, Visibility
}

\section{variables}{


Variables available to the \code{command} depend upon the event.  See
\url{https://www.tcl.tk/man/tcl8.6/TkCmd/bind.html} for the full list.         
           
some variables are listed here:

\describe{
  \item{\code{b}}{The number of the button that was pressed or released. 
        Valid only for ButtonPress and ButtonRelease events. }
  \item{\code{k}}{The keycode field from the event. Valid only for 
        KeyPress and KeyRelease events.}
  \item{\code{K}}{The keysym corresponding to the event, substituted as a 
        textual string. Valid only for KeyPress and KeyRelease events. }
  \item{\code{t}}{time stamp of the event}
  \item{\code{x,y}}{indicate the position of the mouse pointer relative to 
        the UI window. }
  \item{\code{X, Y}}{indicate the position of the mouse pointer in absolute
        screen coordinates}
  \item{\code{D}}{This reports the delta value of a MouseWheel event. 
        The delta value represents the rotation units the mouse wheel 
        has been moved. The sign of the value represents the direction 
        the mouse wheel was scrolled. }
  \item{\code{}}{}
  \item{\code{}}{}
  \item{\code{}}{}
}
}

\section{tcl/tk}{


See tcl/tk documentation for more information on binding commands to events
\url{https://www.tcl.tk/man/tcl8.6/TkCmd/bind.html}
}

\examples{
\dontrun{
# Every mouse press prints coordinates
ui_spec <- tic_window()
win <- render_ui(ui_spec)
bind_event(win, "Button", function(t, x, y, ...) { message(t, ": ", x, ", ", y)})
}


}
