% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tk-menu.R
\name{tic_menuitem}
\alias{tic_menuitem}
\title{Create a menu item}
\usage{
tic_menuitem(label, menutype, command, image, bind = NULL, pack = NULL, ...)
}
\arguments{
\item{label}{text to display}

\item{menutype}{one of the following:
\describe{
  \item{\code{command}}{When menu item is selected, run the function given
        by the \code{command} argument}
  \item{\code{cascade}}{Do not use.  Use \code{tic_submenu()}} to create
        a submenu.
  \item{\code{separator}}{Horizontal separato between menu items}
  \item{\code{checkbutton}}{A menuitem which functions as a checkbutton.
        Use this in conjunction with \code{variable} to specify the 
        \code{reactive_lgl} variable to store the state of the button 
        (i.e. TRUE/FALSE)}.  Use in conjunctionwith \code{command} argument
        to run a function each time the button is selected.
  \item{\code{radiobutton}}{Same as the \code{checkbutton} menu item, but
        fo defining a mutually exclusive set of selection options. 
        See \code{tic_radiobutton()} for more information and examples}
}}

\item{command}{Function to evaluate when the widget is invoked.}

\item{image}{pathname of image to display}

\item{bind}{bind commands to particular events on this element. This may be 
a single result of \code{bind_opts()} or a list of them for multiple
events.}

\item{pack}{a named list of pack options for how to incorporate this element into its 
parent container.  Default: NULL means to use the standard packing.
See \code{pack_opts()} as a way of creating a valid list of pack options.}

\item{...}{Other arguments are parsed as follows:
 \describe{
   \item{\code{named arguments}}{Further options to be used during the creation 
         of this widget.  See the tcl/tk documentation for all arguments possible
         for this widget.}
   \item{\code{unnamed arguments}}{Container widgets (e.g. \code{tic_frame()}) treat any 
         unnamed arguments as child objects.   Non-container widgets 
         (e.g \code{tic_button()}) will
         raise an error if there are any unnamed widgets.}
}}
}
\value{
handle on the tcl/tk object
}
\description{
This element must an immediate child of a \code{tic_menubuton}, 
\code{tic_menu} or \code{tic_submenu}
}
\section{tcl/tk}{


See tcl/tk documentation for more information on this element 
\url{https://www.tcl.tk/man/tcl8.6/TkCmd/menu.htm}
}

\seealso{
Other widgets: 
\code{\link{tic_button}()},
\code{\link{tic_canvas}()},
\code{\link{tic_checkbutton}()},
\code{\link{tic_combobox}()},
\code{\link{tic_label}()},
\code{\link{tic_menubutton}()},
\code{\link{tic_menu}()},
\code{\link{tic_progressbar}()},
\code{\link{tic_radiobutton}()},
\code{\link{tic_separator}()},
\code{\link{tic_sizegrip}()},
\code{\link{tic_slider}()},
\code{\link{tic_spinbox}()},
\code{\link{tic_submenu}()},
\code{\link{tic_textbox}()},
\code{\link{tic_textentry}()}
}
\concept{widgets}
